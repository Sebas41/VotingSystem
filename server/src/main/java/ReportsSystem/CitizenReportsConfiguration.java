//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `ReportsSystem.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ReportsSystem;

public class CitizenReportsConfiguration extends com.zeroc.Ice.Value
{
    public CitizenReportsConfiguration()
    {
        this.assignment = new CitizenVotingAssignment();
        this.packageVersion = "";
    }

    public CitizenReportsConfiguration(CitizenVotingAssignment assignment, ElectionInfo[] availableElections, String packageVersion, long generationTimestamp)
    {
        this.assignment = assignment;
        this.availableElections = availableElections;
        this.packageVersion = packageVersion;
        this.generationTimestamp = generationTimestamp;
    }

    public CitizenVotingAssignment assignment;

    public ElectionInfo[] availableElections;

    public String packageVersion;

    public long generationTimestamp;

    public CitizenReportsConfiguration clone()
    {
        return (CitizenReportsConfiguration)super.clone();
    }

    public static String ice_staticId()
    {
        return "::ReportsSystem::CitizenReportsConfiguration";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 8951898555972741952L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        CitizenVotingAssignment.ice_write(ostr_, assignment);
        ElectionSeqHelper.write(ostr_, availableElections);
        ostr_.writeString(packageVersion);
        ostr_.writeLong(generationTimestamp);
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        assignment = CitizenVotingAssignment.ice_read(istr_);
        availableElections = ElectionSeqHelper.read(istr_);
        packageVersion = istr_.readString();
        generationTimestamp = istr_.readLong();
        istr_.endSlice();
    }
}
