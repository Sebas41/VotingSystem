//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `ReportsSystem.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ReportsSystem;

public class GeographicStats implements java.lang.Cloneable,
                                        java.io.Serializable
{
    public LocationInfo location;

    public ElectionInfo election;

    public int totalMesas;

    public int totalPuestos;

    public int totalMunicipios;

    public long totalCitizens;

    public long totalVotes;

    public double participationPercentage;

    public long generationTimestamp;

    public GeographicStats()
    {
        this.location = new LocationInfo();
        this.election = new ElectionInfo();
    }

    public GeographicStats(LocationInfo location, ElectionInfo election, int totalMesas, int totalPuestos, int totalMunicipios, long totalCitizens, long totalVotes, double participationPercentage, long generationTimestamp)
    {
        this.location = location;
        this.election = election;
        this.totalMesas = totalMesas;
        this.totalPuestos = totalPuestos;
        this.totalMunicipios = totalMunicipios;
        this.totalCitizens = totalCitizens;
        this.totalVotes = totalVotes;
        this.participationPercentage = participationPercentage;
        this.generationTimestamp = generationTimestamp;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        GeographicStats r = null;
        if(rhs instanceof GeographicStats)
        {
            r = (GeographicStats)rhs;
        }

        if(r != null)
        {
            if(this.location != r.location)
            {
                if(this.location == null || r.location == null || !this.location.equals(r.location))
                {
                    return false;
                }
            }
            if(this.election != r.election)
            {
                if(this.election == null || r.election == null || !this.election.equals(r.election))
                {
                    return false;
                }
            }
            if(this.totalMesas != r.totalMesas)
            {
                return false;
            }
            if(this.totalPuestos != r.totalPuestos)
            {
                return false;
            }
            if(this.totalMunicipios != r.totalMunicipios)
            {
                return false;
            }
            if(this.totalCitizens != r.totalCitizens)
            {
                return false;
            }
            if(this.totalVotes != r.totalVotes)
            {
                return false;
            }
            if(this.participationPercentage != r.participationPercentage)
            {
                return false;
            }
            if(this.generationTimestamp != r.generationTimestamp)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::ReportsSystem::GeographicStats");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, location);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, election);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalMesas);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalPuestos);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalMunicipios);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalCitizens);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalVotes);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, participationPercentage);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, generationTimestamp);
        return h_;
    }

    public GeographicStats clone()
    {
        GeographicStats c = null;
        try
        {
            c = (GeographicStats)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        LocationInfo.ice_write(ostr, this.location);
        ElectionInfo.ice_write(ostr, this.election);
        ostr.writeInt(this.totalMesas);
        ostr.writeInt(this.totalPuestos);
        ostr.writeInt(this.totalMunicipios);
        ostr.writeLong(this.totalCitizens);
        ostr.writeLong(this.totalVotes);
        ostr.writeDouble(this.participationPercentage);
        ostr.writeLong(this.generationTimestamp);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.location = LocationInfo.ice_read(istr);
        this.election = ElectionInfo.ice_read(istr);
        this.totalMesas = istr.readInt();
        this.totalPuestos = istr.readInt();
        this.totalMunicipios = istr.readInt();
        this.totalCitizens = istr.readLong();
        this.totalVotes = istr.readLong();
        this.participationPercentage = istr.readDouble();
        this.generationTimestamp = istr.readLong();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, GeographicStats v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public GeographicStats ice_read(com.zeroc.Ice.InputStream istr)
    {
        GeographicStats v = new GeographicStats();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<GeographicStats> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, GeographicStats v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<GeographicStats> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(GeographicStats.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final GeographicStats _nullMarshalValue = new GeographicStats();

    /** @hidden */
    public static final long serialVersionUID = 578764118448869527L;
}
