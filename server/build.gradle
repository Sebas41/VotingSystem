plugins {
    id 'java'
    id 'application'
}

group = 'com.electoral'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // Ice framework
    implementation 'com.zeroc:ice:3.7.2'

    // Database
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'com.zaxxer:HikariCP:5.1.0'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'ch.qos.logback:logback-classic:1.5.3'

    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.14.0'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Configuración de sourceSets para incluir las clases generadas por Ice
sourceSets {
    main {
        java {
            srcDirs = [
                    'src/main/java',           // Código fuente principal
                    '../ReportsSystem',        // Clases generadas por ReportsSystem.ice
                    '../VotingSystem'          // Clases generadas por VotingSystem.ice
            ]
        }
    }
}

application {
    mainClass = 'com.electoral.Server'  // Asegúrate de usar el nombre completo de la clase
}

// Tareas para ejecutar servidores específicos
task runReportsServer(type: JavaExec) {
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Reports.ReportsServer'  // Ajusta si ReportsServer está en un paquete
}

task runVotingServer(type: JavaExec) {
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'Voting.VotingServer'  // Ajusta si VotingServer está en un paquete
}

task runServer(type: JavaExec) {
    group = 'application'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.electoral.Server'  // Ajusta si Server está en un paquete
}

compileJava {
    options.encoding = 'UTF-8'
}

// Tarea para debugging del classpath
task showClasspath {
    doLast {
        println "Compile classpath:"
        configurations.compileClasspath.each { println "  ${it}" }
        println "\nSource sets:"
        sourceSets.main.java.srcDirs.each { println "  ${it}" }
    }
}
