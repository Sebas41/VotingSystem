//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `VotingSystem.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package VotingSystem;

public class MesaInfo implements java.lang.Cloneable,
                                 java.io.Serializable
{
    public int mesaId;

    public int mesaConsecutive;

    public int puestoId;

    public String puestoNombre;

    public String puestoDireccion;

    public int municipioId;

    public String municipioNombre;

    public int departamentoId;

    public String departamentoNombre;

    public int totalCiudadanos;

    public MesaInfo()
    {
        this.puestoNombre = "";
        this.puestoDireccion = "";
        this.municipioNombre = "";
        this.departamentoNombre = "";
    }

    public MesaInfo(int mesaId, int mesaConsecutive, int puestoId, String puestoNombre, String puestoDireccion, int municipioId, String municipioNombre, int departamentoId, String departamentoNombre, int totalCiudadanos)
    {
        this.mesaId = mesaId;
        this.mesaConsecutive = mesaConsecutive;
        this.puestoId = puestoId;
        this.puestoNombre = puestoNombre;
        this.puestoDireccion = puestoDireccion;
        this.municipioId = municipioId;
        this.municipioNombre = municipioNombre;
        this.departamentoId = departamentoId;
        this.departamentoNombre = departamentoNombre;
        this.totalCiudadanos = totalCiudadanos;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MesaInfo r = null;
        if(rhs instanceof MesaInfo)
        {
            r = (MesaInfo)rhs;
        }

        if(r != null)
        {
            if(this.mesaId != r.mesaId)
            {
                return false;
            }
            if(this.mesaConsecutive != r.mesaConsecutive)
            {
                return false;
            }
            if(this.puestoId != r.puestoId)
            {
                return false;
            }
            if(this.puestoNombre != r.puestoNombre)
            {
                if(this.puestoNombre == null || r.puestoNombre == null || !this.puestoNombre.equals(r.puestoNombre))
                {
                    return false;
                }
            }
            if(this.puestoDireccion != r.puestoDireccion)
            {
                if(this.puestoDireccion == null || r.puestoDireccion == null || !this.puestoDireccion.equals(r.puestoDireccion))
                {
                    return false;
                }
            }
            if(this.municipioId != r.municipioId)
            {
                return false;
            }
            if(this.municipioNombre != r.municipioNombre)
            {
                if(this.municipioNombre == null || r.municipioNombre == null || !this.municipioNombre.equals(r.municipioNombre))
                {
                    return false;
                }
            }
            if(this.departamentoId != r.departamentoId)
            {
                return false;
            }
            if(this.departamentoNombre != r.departamentoNombre)
            {
                if(this.departamentoNombre == null || r.departamentoNombre == null || !this.departamentoNombre.equals(r.departamentoNombre))
                {
                    return false;
                }
            }
            if(this.totalCiudadanos != r.totalCiudadanos)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::VotingSystem::MesaInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, mesaId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, mesaConsecutive);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, puestoId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, puestoNombre);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, puestoDireccion);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, municipioId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, municipioNombre);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, departamentoId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, departamentoNombre);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, totalCiudadanos);
        return h_;
    }

    public MesaInfo clone()
    {
        MesaInfo c = null;
        try
        {
            c = (MesaInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeInt(this.mesaId);
        ostr.writeInt(this.mesaConsecutive);
        ostr.writeInt(this.puestoId);
        ostr.writeString(this.puestoNombre);
        ostr.writeString(this.puestoDireccion);
        ostr.writeInt(this.municipioId);
        ostr.writeString(this.municipioNombre);
        ostr.writeInt(this.departamentoId);
        ostr.writeString(this.departamentoNombre);
        ostr.writeInt(this.totalCiudadanos);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.mesaId = istr.readInt();
        this.mesaConsecutive = istr.readInt();
        this.puestoId = istr.readInt();
        this.puestoNombre = istr.readString();
        this.puestoDireccion = istr.readString();
        this.municipioId = istr.readInt();
        this.municipioNombre = istr.readString();
        this.departamentoId = istr.readInt();
        this.departamentoNombre = istr.readString();
        this.totalCiudadanos = istr.readInt();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, MesaInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public MesaInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        MesaInfo v = new MesaInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<MesaInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, MesaInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<MesaInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(MesaInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final MesaInfo _nullMarshalValue = new MesaInfo();

    /** @hidden */
    public static final long serialVersionUID = 2117403863L;
}
