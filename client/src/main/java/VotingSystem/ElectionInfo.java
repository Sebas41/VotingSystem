//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `VotingSystem.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package VotingSystem;

public class ElectionInfo implements java.lang.Cloneable,
                                     java.io.Serializable
{
    public int id;

    public String nombre;

    public String estado;

    public long fechaInicio;

    public long fechaFin;

    public ElectionInfo()
    {
        this.nombre = "";
        this.estado = "";
    }

    public ElectionInfo(int id, String nombre, String estado, long fechaInicio, long fechaFin)
    {
        this.id = id;
        this.nombre = nombre;
        this.estado = estado;
        this.fechaInicio = fechaInicio;
        this.fechaFin = fechaFin;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ElectionInfo r = null;
        if(rhs instanceof ElectionInfo)
        {
            r = (ElectionInfo)rhs;
        }

        if(r != null)
        {
            if(this.id != r.id)
            {
                return false;
            }
            if(this.nombre != r.nombre)
            {
                if(this.nombre == null || r.nombre == null || !this.nombre.equals(r.nombre))
                {
                    return false;
                }
            }
            if(this.estado != r.estado)
            {
                if(this.estado == null || r.estado == null || !this.estado.equals(r.estado))
                {
                    return false;
                }
            }
            if(this.fechaInicio != r.fechaInicio)
            {
                return false;
            }
            if(this.fechaFin != r.fechaFin)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::VotingSystem::ElectionInfo");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, nombre);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, estado);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fechaInicio);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fechaFin);
        return h_;
    }

    public ElectionInfo clone()
    {
        ElectionInfo c = null;
        try
        {
            c = (ElectionInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeInt(this.id);
        ostr.writeString(this.nombre);
        ostr.writeString(this.estado);
        ostr.writeLong(this.fechaInicio);
        ostr.writeLong(this.fechaFin);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.id = istr.readInt();
        this.nombre = istr.readString();
        this.estado = istr.readString();
        this.fechaInicio = istr.readLong();
        this.fechaFin = istr.readLong();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, ElectionInfo v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public ElectionInfo ice_read(com.zeroc.Ice.InputStream istr)
    {
        ElectionInfo v = new ElectionInfo();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<ElectionInfo> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, ElectionInfo v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<ElectionInfo> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(ElectionInfo.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final ElectionInfo _nullMarshalValue = new ElectionInfo();

    /** @hidden */
    public static final long serialVersionUID = 1067774351L;
}
